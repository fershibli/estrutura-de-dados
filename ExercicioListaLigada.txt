
public class No {
    
    private int num = 0;
    private No proxNo;
    
    public No(int num, No no) {
        this.num = num;
        this.proxNo = no;
    }

    public int getNum() {
        return num;
    }

    public void setNum(int num) {
        this.num = num;
    }

    public No getProxNo() {
        return proxNo;
    }

    public void setProxNo(No proxNo) {
        this.proxNo = proxNo;
    }
    
    
}


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.fershibli.ed.aula06.lista_encadeada;

import java.util.LinkedList;

/**
 *
 * @author Alunos
 */
public class ListaLigada {
    LinkedList<No> lista = null;
    
    public ListaLigada() {
        lista = new LinkedList<>();
    }
    
    protected void adicionar(int n) {
        No no = new No(n, null);
        lista.add(no);
        if (lista.size() > 1) {
            No na = lista.get(lista.size() - 2);
            na.setProxNo(no);
            lista.set(lista.size() - 2, na);
        }
    }
    
    protected boolean ehVazia() {
        return lista.isEmpty();
    }
    
    protected void listarLista() {
        for (No no  : lista) {
            System.out.print("[ "+ no.getNum()+" ]");
            if (no.getProxNo() != null) {
                System.out.print(" -> ");
            }
        }
        System.out.println("");
    }
    
    protected void adicionarNoMeio(int n, int posicao) {
        if (posicao >= 0 && posicao <= lista.size()) {
            
            No no = new No(n, null);
            if (posicao ==0) {
                no.setProxNo(lista.get(0));
                lista.add(0, no);
            } else if (posicao == lista.size()) {
                adicionar(n);
            } else {
                No anterior = lista.get(posicao -1);
                No proximo = anterior.getProxNo();
                anterior.setProxNo(no);
                no.setProxNo(proximo);
                lista.add(posicao, no);
            }
        } else {
            System.out.println("Posição inválida");
        }
    }

    protected int tamanho(){
        return lista.size();
    }

    protected int buscar(int n){
        for (int i = 0; i < lista.size(); i++) {
            if (lista.get(i).getNum() == n) {
                return i;
            }
        }
        return -1;
    }
    
    protected No removerPrimeiro() {
        return lista.removeFirst();
    }

    protected No removerUltimo() {
        return lista.removeLast();
    }
}




public class Lista_encadeada {

    public static void main(String[] args) {
        //--- LinkedList ---//
        System.out.println("<< LinkedList: Classe do Java >>");
        LinkedList<String> lista = new LinkedList<String>();
        lista.add("elemento1");
        lista.add("elemento2");
        lista.add("elemento3");
        lista.add("elemento4");
        System.out.println("== Listando Elementos da Lista ==");
        for (String elemento : lista) {
            System.out.println(elemento);
        }
        lista.remove(1);
        System.out.println("== Listando Elementos da Lista ==");
        for (String elemento : lista) {
            System.out.println(elemento);
        }

        System.out.println("== Listando Elementos em Determinadas Posições ==");

        System.out.println(lista.getFirst());
        System.out.println(lista.getLast());
        System.out.println(lista.element());
        System.out.println(lista.get(lista.size() - 1));

        lista.addFirst("elemento0");
        lista.addLast("elemento5");

        System.out.println("== Listando Elementos da Lista ==");

        for (String elemento : lista) {
            System.out.println(elemento);
        }

        //--- ListaLigada ---//

        System.out.println("<< ListaLigada: Classe Feita em Aula >>");

        ListaLigada listaLigada = new ListaLigada();

        listaLigada.adicionar(1);
        listaLigada.adicionar(2);
        listaLigada.adicionar(3);
        listaLigada.adicionar(4);

        System.out.println("== Listando Elementos da Lista Ligada ==");
        listaLigada.listarLista();

        listaLigada.adicionarNoMeio(5, 2);

        System.out.println("== Listando Elementos da Lista Ligada ==");
        listaLigada.listarLista();

        System.out.println("== A Lista Ligada está vazia? ==");
        System.out.println(listaLigada.ehVazia());

        System.out.println("== Tamanho da Lista Ligada ==");
        System.out.println(listaLigada.tamanho());

        System.out.println("== Buscando Elemento na Lista Ligada ==");
        int index = listaLigada.buscar(3);
        if (index > -1) {
            System.out.println("Elemento encontrado na posição: " + index);
        } else {
            System.out.println("Elemento não encontrado");
        }

        System.out.println("== Removendo Primeiro Elemento da Lista Ligada ==");
        listaLigada.removerPrimeiro();
        listaLigada.listarLista();

        System.out.println("== Removendo Último Elemento da Lista Ligada ==");
        listaLigada.removerUltimo();
        listaLigada.listarLista();

    }
}


